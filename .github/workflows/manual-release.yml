name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.1)'
        required: true
        type: string
      bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Determine version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            # Use provided version
            VERSION="${{ github.event.inputs.version }}"
            # Add 'v' prefix if not present
            [[ $VERSION =~ ^v ]] || VERSION="v$VERSION"
          else
            # Calculate version from bump type
            CURRENT=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            CURRENT=${CURRENT#v}
            
            IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT"
            
            case "${{ github.event.inputs.bump_type }}" in
              major)
                MAJOR=$((MAJOR + 1))
                MINOR=0
                PATCH=0
                ;;
              minor)
                MINOR=$((MINOR + 1))
                PATCH=0
                ;;
              patch)
                PATCH=$((PATCH + 1))
                ;;
            esac
            
            VERSION="v$MAJOR.$MINOR.$PATCH"
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major=$(echo $VERSION | cut -d. -f1)" >> $GITHUB_OUTPUT
          echo "Releasing $VERSION"
      
      - name: Update CHANGELOG
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          TODAY=$(date +%Y-%m-%d)
          
          if [ -f CHANGELOG.md ]; then
            if ! grep -q "## \[$VERSION\]" CHANGELOG.md; then
              sed -i "s/## \[Unreleased\]/## [Unreleased]\n\n## [$VERSION] - $TODAY/" CHANGELOG.md
              git add CHANGELOG.md
              git commit -m "Update CHANGELOG for $VERSION" || true
            fi
          fi
      
      - name: Create and push tag
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          git tag -a $VERSION -m "Release $VERSION"
          git push origin main || true
          git push origin $VERSION
      
      - name: Extract changelog
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          if [ -f CHANGELOG.md ]; then
            NOTES=$(awk "/## \[$VERSION\]/,/## \[/" CHANGELOG.md | sed '1d;$d' | sed '/^$/d')
            [ -z "$NOTES" ] && NOTES="Release $VERSION"
          else
            NOTES="Release $VERSION"
          fi
          
          echo "$NOTES" > release-notes.md
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: ${{ steps.version.outputs.version }}
          body_path: release-notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update major version tag
        run: |
          MAJOR_TAG="${{ steps.version.outputs.major }}"
          VERSION="${{ steps.version.outputs.version }}"
          
          git tag -d $MAJOR_TAG 2>/dev/null || true
          git push origin :refs/tags/$MAJOR_TAG 2>/dev/null || true
          git tag -a $MAJOR_TAG -m "Latest ${MAJOR_TAG}.x.x release"
          git push origin $MAJOR_TAG
          
          echo "âœ“ Updated $MAJOR_TAG to point to $VERSION"

